controller:
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 32Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: kps
    rules:
      enabled: true
      spec:
        - alert: ArgoAppMissing
          expr: |
            absent(argocd_app_info)
          for: 15m
          labels:
            severity: critical
          annotations:
            summary: "[Argo CD] No reported applications"
            description: >
              Argo CD has not reported any applications data for the past 15 minutes which
              means that it must be down or not functioning properly.  This needs to be
              resolved for this cloud to continue to maintain state.
        - alert: ArgoAppNotSynced
          expr: |
            argocd_app_info{sync_status!="Synced"} == 1
          for: 12h
          labels:
            severity: warning
          annotations:
            summary: "[{{`{{$labels.name}}`}}] Application not synchronized"
            description: >
              The application [{{`{{$labels.name}}`}} has not been synchronized for over
              12 hours which means that the state of this cloud has drifted away from the
              state inside Git.

dex:
  enabled: false
  metrics:
    enabled: false
    serviceMonitor:
      enabled: true
      interval: 30s
      relabelings: []
      metricRelabelings: []
      # selector:
      #   prometheus: kube-prometheus
      # namespace: monitoring
      additionalLabels:
        release: kps

redis:
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
  metrics:
    enabled: true
    resources:
      limits:
        cpu: 50m
        memory: 64Mi
      requests:
        cpu: 10m
        memory: 32Mi
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: kps

server:
  extraArgs:
    - --insecure
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: kps
  config:
    url: https://argocd.k8s.nephtek.com
    application.instanceLabelKey: argocd.argoproj.io/instance
    oidc.config: |
      name: Keycloak
      issuer: https://keycloak.k8s.nephtek.com/auth/realms/ldap-realm
      clientId: argocd
      clientSecret: $oidc.keycloak.clientSecret
      requestedScopes: ["openid", "profile", "email", "groups"]
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: nephtek-com-issuer
    ingressClassName: nginx
    hosts:
      - argocd.k8s.nephtek.com
    tls:
      - secretName: argocd-k8s-nephtek-com-cert
        hosts:
          - argocd.k8s.nephtek.com
    https: false
  ingressGrpc:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: nephtek-com-issuer
    ingressClassName: nginx
    hosts:
      - argocd-grpc.k8s.nephtek.com
    tls:
      - secretName: argocd-grpc-k8s-nephtek-com-cert
        hosts:
          - argocd-grpc.k8s.nephtek.com
    https: false
  rbacConfig:
    policy.csv: |
      g, argocdadmins, role: admin

repoServer:
  resources:
    limits:
      cpu: 50m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi
  metrics:
    enabled: true
    service:
      annotations: {}
      labels: {}
      servicePort: 8084
    serviceMonitor:
      enabled: true
      interval: 30s
      additionalLabels:
        release: kps

configs:
  secret:
    extra:
      oidc.keycloak.clientSecret: lGkXCAIYVnN6qTU6W0yw6MNdVgcA6sCD
